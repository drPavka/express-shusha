{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/main.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;ACD5D,MAAM,YAAY;IATzB;QAUI,UAAK,GAAG,aAAa,CAAC;KAEzB;;wEAHY,YAAY;4FAAZ,YAAY;QANjB,qEAAI;QAAA,iIAAsE;QAAA,4DAAK;QAC/E,2KACA;QAAA,2EAA+B;;;;;;;;;;;;;;ACTvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AAEX;AAES;AACL;;AAc1C,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFN,2DAAY;6FADb,EAAE,YAJJ;YACL,uEAAa;YACb,oEAAgB;SACnB;mIAIQ,SAAS,mBAVd,2DAAY;QACZ,6DAAa,aAGb,uEAAa;QACb,oEAAgB;;;;;;;;;;;;;ACdxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6B;AACiB;;;AAcvC,MAAM,aAAa;IActB,YAAoB,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;QAbjC,cAAS,GAAkB,IAAI,4CAAO,EAAQ,CAAC;IAevD,CAAC;IAbD,WAAW;QACP,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CACf,gEAAS,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,EACxC,0DAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CACjC,CAAC,SAAS,EAAE,CAAC;IAClB,CAAC;;0EAZQ,aAAa;6FAAb,aAAa;QARlB,qEAAI;QACA,qEAAI;QAAA,uEAAkB;QAAA,uEAAY;QAAA,4DAAI;QAAA,4DAAK;QAC3C,qEAAI;QAAA,uEAA2B;QAAA,2EAAgB;QAAA,4DAAI;QAAA,4DAAK;QACxD,qEAAI;QAAA,uEAAmC;QAAA,4EAAiB;QAAA,4DAAI;QAAA,4DAAK;QACrE,4DAAK;;;;;;;;;;;;;;ACXb;AAAA;AAAA;AAAA;AAAA;AAAqD;AACN;;;AAE/C,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,IAAI;QACV,SAAS,EAAE,6DAAa;KAC3B;CACJ,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHhB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAC,sBAAsB,EAAE,QAAQ,0BAAyB,EAAC,CAAC,CAAC,EAC1F,4DAAY;mIAEb,gBAAgB,uFAFf,4DAAY;;;;;;;;;;;;;;;;;;;ACbqB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Subject} from 'rxjs';\nimport {takeUntil, tap} from 'rxjs/operators';\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <h1>I'm an Angular application, where index.html was generated at runtime.</h1>\n        Check slug value in meta tags. This indicates that slug data can be analyzed and transformed on backend layer.\n        <router-outlet></router-outlet>\n    `,\n    styles: []\n})\nexport class AppComponent {\n    title = 'angular-app';\n\n}\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppComponent} from './app.component';\nimport {RouterModule} from '@angular/router';\nimport {AppRoutingModule} from './app-routing.module';\nimport { MainComponent } from './main.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        MainComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil, tap} from 'rxjs/operators';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n    selector: 'app-main',\n    template: `\n        <ul>\n            <li><a href=\"/test-1\">Another link</a></li>\n            <li><a routerLink=\"/test/link\">Yet another link</a></li>\n            <li><a routerLink=\"/test-another/link\">Yet one more link</a></li>\n        </ul>\n    `,\n    styles: []\n})\nexport class MainComponent implements OnInit,OnDestroy {\n    private destroy$$: Subject<void> = new Subject<void>();\n\n    ngOnDestroy(): void {\n        this.destroy$$.next();\n    }\n\n    ngOnInit(): void {\n        this.route.url.pipe(\n            takeUntil(this.destroy$$.asObservable()),\n            tap(console.log.bind(console))\n        ).subscribe();\n    }\n\n    constructor(private route: ActivatedRoute) {\n\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MainComponent} from './main.component';\n\nconst routes: Routes = [\n    {\n        path: '**',\n        component: MainComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, {relativeLinkResolution: 'legacy'/*, enableTracing: true*/})],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}